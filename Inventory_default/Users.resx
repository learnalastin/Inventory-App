<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAUDBAQEAwUEBAQFBQUGBwwIBwcHBw8LCwkMEQ8SEhEPERET
        FhwXExQaFRERGCEYGh0dHx8fExciJCIeJBweHx7/2wBDAQUFBQcGBw4ICA4eFBEUHh4eHh4eHh4eHh4e
        Hh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh7/wAARCABkAGQDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD7KoopGZVUsxCqBkkngCgBay9V13T9OJSSTzJh/wAs4+SPr2Fc
        /wCIfEsk7Nbac5ji6NKOGf6eg/WuZr5LMuJVTbp4VXffp8u/9bnuYPJ3Nc9bTyOivfFt/KSLaKK3XsSN
        7frx+lZkus6rKctqE/8AwFtv8qoUV8rWzPF1nedR/fb8Ee3TwdCmrRgi2uqakpyL+6H/AG1NW7bxHq8J
        /wCPrzR6SKD/APXrJorOnjcTTd41Gvmy5YejJWcV9x2OneL4nIS+tzEf78fzD8uv866S1uILqETW8qSx
        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
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAUDBAQEAwUEBAQFBQUGBwwIBwcHBw8LCwkMEQ8SEhEPERET
        FhwXExQaFRERGCEYGh0dHx8fExciJCIeJBweHx7/2wBDAQUFBQcGBw4ICA4eFBEUHh4eHh4eHh4eHh4e
        Hh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh7/wAARCABkAGQDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD7KoopGZVUsxCqBkkngCgBay9V13T9OJSSTzJh/wAs4+SPr2Fc
        /wCIfEsk7Nbac5ji6NKOGf6eg/WuZr5LMuJVTbp4VXffp8u/9bnuYPJ3Nc9bTyOivfFt/KSLaKK3XsSN
        7frx+lZkus6rKctqE/8AwFtv8qoUV8rWzPF1nedR/fb8Ee3TwdCmrRgi2uqakpyL+6H/AG1NW7bxHq8J
        /wCPrzR6SKD/APXrJorOnjcTTd41Gvmy5YejJWcV9x2OneL4nIS+tzEf78fzD8uv866S1uILqETW8qSx
        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
</value>
  </data>
</root>